{%- macro chapter(title) %}
{{ title | title_fill("*") }}
{{ title }}
{{ title | title_fill("*") }}{% endmacro -%}

{%- macro section(title) %}
{{ title }}
{{ title | title_fill("=") }}{% endmacro -%}

{%- macro subsection(title) %}
{{ title }}
{{ title | title_fill("-") }}{% endmacro -%}

{%- macro subsubsection(title) %}
{{ title }}
{{ title | title_fill("^") }}{% endmacro -%}

{%- macro paragraph(title) %}
{{ title }}
{{ title | title_fill('"') }}{% endmacro -%}

.. contents:: :depth: 3

{% for tsproj in tsprojects %}
{{ chapter(tsproj.filename) }}

{{ section("Pragmas") }}

.. csv-table::
    :header: PLC Name, Total Pragmas, Errors
    :align: center

    {% for plc in tsproj.plcs %}
    :ref:`{{ plc.name }} <{{ plc.name }}_pragmas>`, {{ plc.pragma_count }}, {{ plc.pragma_errors }}
    {% endfor %}

{{ section("NC Settings") }}

{% for nc in tsproj.nc %}
.. csv-table::
    :header: Axis ID, Name
    :align: center

    {% for axis_id, axis in nc.axis_by_id | dictsort %}
        {{ axis_id }}, {{ axis.name }}
    {% endfor %}{# for axis... #}

{% for axis_id, axis in nc.axis_by_id | dictsort %}

{% set header -%}
Axis {{ axis_id }}: {{ axis.name }}
{%- endset %}

{{ subsection(header) }}

.. csv-table::
    :header: Setting, Value
    :align: center

    Axis ID, {{ axis_id }}
    Name, {{ axis.name }}
    {% for setting, value in axis.summarize() | sort %}
    {{ setting }}, {{ value }}
    {% endfor %}{# for setting... #}

{% endfor %}{# for axis... #}

{% endfor %}{# for nc... #}

{{ section("Boxes") }}

{% for box_id, box in tsproj.box_by_id | dictsort %}

{{ subsection(box.name | trim("=+-")) }}

{% if box.EtherCAT %}
{% set ethercat = box.EtherCAT[0] %}

.. raw:: html

   <details>
        <summary>EtherCAT{% if ethercat.Pdo %} ({{ethercat.Pdo|length}} PDOs){% endif %}</summary>

.. csv-table:: Basic Settings
    :header: Name, Data
    :align: center

    Name, {{ box.name }}
    ID, {{ box_id }}
    {% for item in ethercat.BootStrapData %}
        BootStrapData, {{ item.text }}
    {% endfor %}
    {% for item in ethercat.SyncMan %}
        SyncMan, {{ item.text }}
    {% endfor %}
    {% for item in ethercat.Fmmu %}
        Fmmu, {{ item.text }}
    {% endfor %}
    {% for item in ethercat.CoeProfile %}
        CoeProfile, {{ item.attributes.get('ProfileNo') }}
    {% endfor %}

{% for pdo in ethercat.Pdo %}

    {% set pdotitle -%}
    PDO {{ pdo.name}} (Index {{pdo.attributes.Index}}, Flags {{pdo.attributes.Flags}}, SyncMan {{pdo.attributes.SyncMan}})
    {%- endset %}

{{ pdotitle }}

{% if pdo.Entry %}
.. csv-table::
    :header: Name, Comment, BitLen, Index, Type
    :align: center

        {% for entry in pdo.Entry %}
        "{{ entry.name }}", "{{ entry.comment | replace("\n", " ")}}", {{entry.attributes.BitLen}}, "{{entry.attributes.Index}}", "{{entry.entry_type.qualified_type}}"
        {% endfor %}

{% endif %}{# if pdo.Entry #}
{% endfor %}{# for pdo in ... #}

.. raw:: html

   </details>

{% endif %}{# if ethercat #}
{% endfor %}{# for box_id... #}

{{ section("Links") }}

.. raw:: html

   <details>
        <summary>{{ tsproj.links|length}} Links</summary>
.. csv-table::
    :header: Owner A, Item A, Owner B, Item B
    :align: center

    {% for link in tsproj.links | sort(attribute="a") %}
        {{ link.a[0] }}, {{ link.a[1] }}, {{ link.b[0] }}, {{ link.b[1] }}
    {% endfor %}{# for link... #}

.. raw:: html

   </details>


{% for plc in tsproj.plcs %}
{{ section(plc.name) }}

{{ subsection('Settings') }}

.. list-table::
    :header-rows: 1
    :align: center

    * - Setting
      - Value
      - Description
    * - AMS Net ID
      - {{ plc.obj.ams_id | default("UNSET") }}
      -
    * - Target IP address
      - {{ plc.obj.target_ip | default("UNSET") }}
      - Based on AMS Net ID by convention
    * - AMS Port
      - {{ plc.obj.port | default("UNSET") }}
      -

.. _{{ plc.name }}_pragmas:

{{ subsection('Pragmas') }}

Total pragmas found: {{ plc.pragma_count }}
Total linter errors: {{ plc.pragma_errors }}

        {% for filename, items in plc.linter_results | groupby('filename') %}
            {{- subsubsection(filename) }}

            {% for item in items %}
#. Line {{ item.line_number }} ({{ item.exception.__class__.__name__ }})

::

    {{ item.exception | string | indent(4) }}

    Full pragma:

    {{ item.pragma | indent(4) }}

            {% endfor %}{# for item in items #}
        {% endfor %}{# for ... in plc.linter_results #}

{{ subsection('Source Code') }}

{% for source_dict in [plc.obj.dut_by_name, plc.obj.gvl_by_name, plc.obj.pou_by_name] %}

{% for source_name, source in source_dict | dictsort %}

{% set header = source.tag + ': ' + source_name %}
{{ subsubsection(header) }}

::

    {{ source.get_source_code() | indent(4) }}

{% endfor %}{# for dut_name, ... #}
{% endfor %}{# for source_dict ... #}

{{ subsection("Symbols") }}


{% for group, symbols in plc.symbols | groupby(attribute="top_level_group") %}

    {{- subsubsection(group) }}

{% if symbols|length > 2 %}
.. raw:: html

   <details>
       <summary>{{symbols|length}} Symbols</summary>

{% endif %}
.. csv-table::
    :header: Symbol, Type, Offset/Size
    :align: center

    {% for symbol in symbols | sort(attribute="name") %}
        {{ symbol.name }}, {{ symbol.summary_type_name }}, {{ symbol.BitOffs[0].text }} ({{ symbol.BitSize[0].text }})
    {% endfor %}{# for symbol... #}

{% if symbols|length > 2 %}
.. raw:: html

   </details>

{% endif %}
{% endfor %}{# for group... #}

{% endfor %}{# for plc in tsproj.plcs #}
{% endfor %}{# for tsproj in tsprojects #}

{{ chapter("EPICS Record Database") }}
